Find token <PREPROCESS, #include <stdio.h>> at Ln 2, Col 1
Find token <KEYWORD, int> at Ln 3, Col 4
Find token <ID, main> at Ln 3, Col 9
Find token <SINGLE, (> at Ln 3, Col 10
Find token <SINGLE, )> at Ln 3, Col 11
Find token <SINGLE, {> at Ln 4, Col 2
Find token <NOTE, /* My third C program */> at Ln 5, Col 28
Find token <ID, printf> at Ln 6, Col 10
Find token <SINGLE, (> at Ln 6, Col 11
Find token <STRING, "Hello, World! \n"> at Ln 6, Col 29
Find token <SINGLE, )> at Ln 6, Col 30
Find token <SINGLE, ;> at Ln 6, Col 31
Find token <KEYWORD, int> at Ln 8, Col 7
Find token <ID, a> at Ln 8, Col 9
Find token <OP, => at Ln 8, Col 11
Find token <ID, a> at Ln 8, Col 16
Find token <SINGLE, ;> at Ln 8, Col 17
Find token <KEYWORD, char> at Ln 9, Col 8
Find token <OP, *> at Ln 9, Col 9
Find token <ID, b> at Ln 9, Col 11
Find token <OP, => at Ln 9, Col 13
Find token <KEYWORD, return> at Ln 11, Col 10
Find token <INT, 0> at Ln 11, Col 12
Find token <SINGLE, ;> at Ln 11, Col 13
Find token <SINGLE, }> at Ln 12, Col 2
****************************************************************
Lexical analysis compleated. Source program has 12 lines.
Token type count:
ID: 5
INT: 1
FLOAT: 0
OP: 3
SINGLE: 9
NOTE: 1
KEYWORD: 4
STRING: 1
PREPROCESS: 1
Total 146 characters.
****************************************************************
Error info:
ERROR at Ln 8, Col 15
ERROR at Ln 10, Col 1

